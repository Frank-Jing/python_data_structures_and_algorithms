{"files":{"163_course.png":{"mtime":1598744372905.5715,"size":304699,"hash":"b0805e8033c1a233c4d5e3effdb714954479d5286ea3851e99fa6ede9f2a4df7"},"docs/00_课程简介之笨方法学算法/why_and_how_to_learn.md":{"mtime":1598744557583.6772,"size":1718,"hash":"85d4c694d38b1bec1a834291ad0347ee7da9b2b95d7144d0f100de917aa6fe2a"},"docs/01_抽象数据类型和面向对象编程/ADT_OOP.md":{"mtime":1598744372908.5376,"size":1996,"hash":"4776be20249dbb6fb7c6e3b1f5b618c4a1157edd4bdb131fd33acf819300e484"},"docs/02_数组和列表/array_and_list.md":{"mtime":1598744372909.5652,"size":3169,"hash":"8fa6c2f85480534c042518535e120bce9538203ab1ff3054a50fb6cb10bd93f8"},"docs/02_数组和列表/list.png":{"mtime":1598744372911.556,"size":248185,"hash":"ec1187d63251b8ddfb73c827e530684d1cbba4b9e52aa82ebb6d57c498343e01"},"docs/03_链表/linked_list.md":{"mtime":1598744372912.5647,"size":6711,"hash":"a18ebbd54c3e7bb27538b2d16da6d73c3d8948d0836e276daf258040f7736d5d"},"docs/04_队列/array_queue.png":{"mtime":1598744372914.5469,"size":109894,"hash":"bc66102a3902cf9911a257f545e7f796bb2d3925d989c13b7a5416580816f35f"},"docs/04_队列/queue.md":{"mtime":1598744372915.519,"size":4227,"hash":"e9e5f130cdfac7f9dc19554eebc11438cada50d42a89cc4466a5375722b3834e"},"docs/05_栈/stack.md":{"mtime":1598744372916.5432,"size":3878,"hash":"9ad0e91fa6e7f67544db45858b6ec745dda20233dbdee9d1fbca26186b78adc7"},"docs/06_算法分析/big_o.md":{"mtime":1598744372917.539,"size":5998,"hash":"3cbda9073628599763bd2bdfaf367128ecd836e977f1fe877e6b71df22e0b5a1"},"docs/06_算法分析/function_growth.png":{"mtime":1598744372919.5337,"size":145936,"hash":"3e705e3265dde624dccf40557922dcbb411f49620766c818cd86b606743bf058"},"docs/07_哈希表/hashtable.md":{"mtime":1598744372919.5337,"size":9817,"hash":"9a1bc183bd8203e65c575c71b87cbd94d2a5fd3570f6bde49d92b22d638a20d2"},"docs/07_哈希表/insert_hash.png":{"mtime":1598744372921.5283,"size":167188,"hash":"056280404b67f97e9e1661eb66dc8416a61518b3fc6af5512cdaa41c552270cc"},"docs/07_哈希表/insert_hash_chaining.png":{"mtime":1598744372923.4973,"size":227754,"hash":"8ebe60a33e4f4ced7264826b9efe7844d95c453c6feaeadddc8a61b77dc9a59b"},"docs/07_哈希表/quadratic_hash.png":{"mtime":1598744372924.4944,"size":27077,"hash":"f430218fd737a5ed2f8955d71af91ba7ee471f982fc99d1c9b2fd57e9a4be7c9"},"docs/07_哈希表/quadratic_result.png":{"mtime":1598744372924.4944,"size":21491,"hash":"15b7a693b4f6247070e8a74e93e63b5c2856fbe844e9d0f392a6d0cb2d6c4e1c"},"docs/08_字典/dict.md":{"mtime":1598744372925.4915,"size":3054,"hash":"92da20798777ea4a0fec17792d009eb58cfa711febeabe0cc1306ea5e741886e"},"docs/09_集合/set.md":{"mtime":1598744372926.489,"size":2969,"hash":"07fbcaadf01bb57aff87033bbfe7d0056f252bb30b62faee2f776685b2a4ed2b"},"docs/09_集合/set.png":{"mtime":1598744372927.486,"size":82401,"hash":"747c960cb944cf8315769a167e1170217c7b10fd956019ce2bb5e9f0882628ce"},"docs/10_递归/fact.png":{"mtime":1598744372928.4836,"size":12812,"hash":"c9a8260d73a69ff36ca5440a6476da03b6adba139c36f2523a5641ec1fca9734"},"docs/10_递归/hanoi.gif":{"mtime":1598744372929.481,"size":47836,"hash":"7fae9bd712477b7ba1e3d9dac463952b5063aa39518496996bca5ea391f1ed69"},"docs/10_递归/hanoi_four_disks.png":{"mtime":1598744372930.479,"size":19490,"hash":"8e7d7972ba1aa7c3af05102fa8cf6862b9e363939b24c2665faaa337d7fdbbca"},"docs/10_递归/hanoi_tower.png":{"mtime":1598744372930.479,"size":20520,"hash":"d137ebaf680c73e71e950e677e7ac85c6384705e7178174e1a2d6e128a2fb233"},"docs/10_递归/print_rec.png":{"mtime":1598744372931.4753,"size":116637,"hash":"2110672d10ed4425182ce9289f8386ee3c28f4388f6c6557001c7bfeded458f4"},"docs/10_递归/recursion.md":{"mtime":1598744372932.473,"size":9629,"hash":"b41def978728c5b738859e03b95c1ad9571e57bf75463847aea95a6bc7cedec2"},"docs/11_线性查找与二分查找/search.md":{"mtime":1598744372933.4702,"size":5358,"hash":"790301d4d2ebc7ecf11c6b8bcc3a04c44d13e9b87a97604f10c76ecfe0be3b8c"},"docs/12_基本排序算法/basic_sort.md":{"mtime":1598744372934.4675,"size":6665,"hash":"da3b4890a9625155bffbd9243d80f73b7fc452375e4006a1d840f81d6226fc88"},"docs/13_高级排序算法/advanced_sorting.md":{"mtime":1598744372935.4648,"size":378,"hash":"cc8cd0e31b6e96b52950d0bdf6e2226fb84582f81b903c3c268a41dc8207de4f"},"docs/13_高级排序算法/merge_sort.md":{"mtime":1598744372935.4648,"size":4041,"hash":"9ad57f3162f19980f2cb92fe12d1367eb3759f057f8725f78f6ae6d57ec0adc7"},"docs/13_高级排序算法/merge_sorted_array.png":{"mtime":1598744372939.454,"size":111445,"hash":"3ea178ca529d9fc67e95e10d2301505918e32b4bf1944b7c76d09a2ac3328bfe"},"docs/13_高级排序算法/merge_sorted_array_2.png":{"mtime":1598744372940.4514,"size":120961,"hash":"60365f5c9995844a84b3312ec278679b473b3e7433d4cbcb92a2de3bf804cc13"},"docs/13_高级排序算法/merge_sort_merge.png":{"mtime":1598744372936.4622,"size":54590,"hash":"a8f197eb73ef49e894f02466165a403514483992c91ef070df6abae520330c3a"},"docs/13_高级排序算法/merge_sort_recursion_tree.png":{"mtime":1598744372937.4595,"size":95619,"hash":"b1d8d0ee9ef0674c67d88b06c575cb4077f62adae529f55c79e8909fa72838ad"},"docs/13_高级排序算法/merge_sort_split.png":{"mtime":1598744372938.4568,"size":56334,"hash":"cca380ad0251ce6af81c712bab87c2240364987997f7bcc6cab9b478e7d2d8a5"},"docs/13_高级排序算法/partition.png":{"mtime":1598744372941.4487,"size":100687,"hash":"6782597338084983c97bed83b69b819b7bbb8d67d1b155e092f6054ea582c04b"},"docs/13_高级排序算法/quicksort_worst.png":{"mtime":1598744372943.4436,"size":67090,"hash":"34a0b8162b517141689fd0b8fd42cec7a2493fe6a221377fffdb836b0da4e156"},"docs/13_高级排序算法/quick_sort.md":{"mtime":1598744372941.4487,"size":6330,"hash":"26c8b78bcd00fbbd77c0e8b26e728bf013c29af23edf860ff2f583086d53808e"},"docs/13_高级排序算法/quick_sort.png":{"mtime":1598744372942.446,"size":94479,"hash":"f40c5edadb10672db255a562000ff2cf2c16f247915f3dcfb98c7a80c6065f0d"},"docs/13_高级排序算法/tn.png":{"mtime":1598744372945.4382,"size":173846,"hash":"578a346a014f817a1861662a9aef33fc0d1bafdc8189d68a4d91d9748c7ec930"},"docs/14_树与二叉树/binary_tree.png":{"mtime":1598744372946.4353,"size":79506,"hash":"889b6b2d53120be1cb01d34edefee1d106acc1cc7ff8f2194c9ae10b6351f29e"},"docs/14_树与二叉树/binary_tree_level.png":{"mtime":1598744372946.4353,"size":58427,"hash":"7e9c4f7f6f6cce01e901a67de2ae4f8941724af50de8529bcff2b76fcb712f23"},"docs/14_树与二叉树/complete_binary_tree.png":{"mtime":1598744372947.4329,"size":54795,"hash":"d278860636a7333f30899ee443ad6076d46ac8f3e4d317332d940f076ea78465"},"docs/14_树与二叉树/family_tree.png":{"mtime":1598744372948.43,"size":71213,"hash":"59fe9e6a46fc81c261018fd39a3f95eefd9dba9defb97b212961c1825c329ee0"},"docs/14_树与二叉树/full_binary_tree.png":{"mtime":1598744372949.4275,"size":30734,"hash":"2bbd5f44726fef81dd3bf0928df55e0c53575c9f724a0606c411357ff6f44b42"},"docs/14_树与二叉树/perfect_binary_tree.png":{"mtime":1598744372949.4275,"size":20170,"hash":"3a8a5ac765398fb027c7063d2af51d665cd290590d99efd817109a1e3df28467"},"docs/14_树与二叉树/preorder.png":{"mtime":1598744372950.4248,"size":61632,"hash":"0d3a951586bba7d1c628147899fe9156ac0ec430c2c83b77f2d55c875e6141a0"},"docs/14_树与二叉树/tree.md":{"mtime":1598744372950.4248,"size":12880,"hash":"98e423739c38a44737690248ac3464e7b2ead8dd323de308ce95f33f179dba5e"},"docs/14_树与二叉树/tree.png":{"mtime":1598744372951.422,"size":58588,"hash":"0114e330ebbabc1a163d5613e6c438eb57a0823f348c2aaa1301e51389aeadd1"},"docs/15_堆与堆排序/heap.png":{"mtime":1598744372952.4194,"size":54956,"hash":"b0cf115751cbad57e2d4bda50b042c5238ef305ecd0d5ea9112cedaa96c460b0"},"docs/15_堆与堆排序/heap_and_heapsort.md":{"mtime":1598744372952.4194,"size":8517,"hash":"f482a1202d74aa7f05cffe8126998a7b739b72fc17b127e4d77232ed3463585e"},"docs/15_堆与堆排序/heap_array.png":{"mtime":1598744372953.417,"size":67252,"hash":"7658b3df78fe6b470fc0c88d6c8597fd4365ebe0eabb80b17ea77a129aad41f2"},"docs/15_堆与堆排序/siftdown.png":{"mtime":1598744372955.4116,"size":117076,"hash":"14b3f5b0fb290dcfb961ca0ab565585cb96d7cee702df6737ee3aeac044b4130"},"docs/15_堆与堆排序/siftup.png":{"mtime":1598744372956.4087,"size":107165,"hash":"864c6f8db8dc832ff3d66bbb1c21d91ed400ca60d82fa360af31d05fc78ac578"},"docs/163_course.png":{"mtime":1598744372956.4087,"size":17,"hash":"f36dad7ddd9e1f299cba9fcc0a59b0261a72b0675eb0df792956f811d99b8417"},"docs/16_优先级队列/priority_queue.md":{"mtime":1598744372957.406,"size":1892,"hash":"0c59b7eb9730149cd2616e2f023f1a947291325ad6fd6baf6977f92f1d67cd6e"},"docs/17_二叉查找树/binary_search_tree.md":{"mtime":1598744372958.4033,"size":10930,"hash":"a82202008b2d5cb07e18d6fc2d6a606ace8160c97110d84e9e2f99e11b0eeead"},"docs/17_二叉查找树/bst.png":{"mtime":1598744372958.4033,"size":35847,"hash":"1b27e1d6b2c2be0fefce3eb1480b8ae8b2bf3855e2759c87e38bd8fe1b97861c"},"docs/17_二叉查找树/bst_insert.png":{"mtime":1598744372960.3982,"size":66789,"hash":"297e6fa29cbc06f6081e925a1c2b4b13e8e29aadcaca74c7d7fb1497f4e2a6de"},"docs/17_二叉查找树/bst_remove_leaf.png":{"mtime":1598744372960.3982,"size":70133,"hash":"815b50b5e275c9e9025abd53690a78f9fe017e41e472ff913024414383b46602"},"docs/17_二叉查找树/bst_remove_node_with_one_child.png":{"mtime":1598744372961.3955,"size":74799,"hash":"2a7263a925ef2177886be8c58465ae5b9f734b854acf5fdef7f6c837984cf328"},"docs/17_二叉查找树/bst_search.png":{"mtime":1598744372962.3933,"size":54169,"hash":"20e77e5882a047816e061caa2bc90225f01340037dacfd90f82a20ca293c53e4"},"docs/17_二叉查找树/bst_worstcase.png":{"mtime":1598744372962.3933,"size":42339,"hash":"f710a5cbefe07ac98710253e31814f2732814ef0a2a6933e9412ad8bb9bb10ae"},"docs/17_二叉查找树/find_successor.png":{"mtime":1598744372964.3875,"size":117128,"hash":"6fd92cf7c4104c7b2bf2037f70bb304f17430b81c0651a47a4e49591254382ff"},"docs/17_二叉查找树/predecessor_successor.png":{"mtime":1598744372964.3875,"size":43136,"hash":"04ef30a768dc455d52107407be8fae1863aa54dfae58ce521693b37628d441eb"},"docs/17_二叉查找树/remove_interior_replace.png":{"mtime":1598744372965.3848,"size":63255,"hash":"6cd2ac1c9781aacb9bb07dda698be01814de32403559a3c21c5d2c1a20ce1eaa"},"docs/18_图与图的遍历/bfs.png":{"mtime":1598744372966.382,"size":48713,"hash":"a4fb0a05daa8b5d7b30813a0f1db0c0f54dd6494246d5a42a55a49a64f30d0aa"},"docs/18_图与图的遍历/graph.md":{"mtime":1598744372966.382,"size":4751,"hash":"c7335e3a7a41962f991d4b7c170f15081a14b76dc87c1822666182ab509c6500"},"docs/18_图与图的遍历/graph_rep.png":{"mtime":1598744372967.3794,"size":88634,"hash":"0d13b4d20b17863124fcb68bee341203b7812474b1c7c0277c74d746ab5fb86f"},"docs/18_图与图的遍历/graph_road.png":{"mtime":1598744372968.3767,"size":75007,"hash":"ad8dc10914410c09308700e46ed9b0ba91ce07dae22e7104b71a6d38b181b9f9"},"docs/19_python内置常用算法和数据结构/builtins.md":{"mtime":1598744372969.3743,"size":2233,"hash":"c6bda65ced80cbb7dbbd618706f67689896e86292c47b6401369095b11e52a07"},"docs/20_面试指南/interview.md":{"mtime":1598744372969.3743,"size":4560,"hash":"1a913b5dd98683b13f4863e577e697f9bcc4c5c7d0cd81a69aad49ff40fd7e43"},"docs/index.md":{"mtime":1598744372970.3716,"size":12,"hash":"dbcc210d7f4962499db6d4cfa18658e26d05ee700c962a811cac911f095e22fd"},"README.md":{"mtime":1598744372906.5713,"size":19136,"hash":"abe53e14a6b266777965dd1c9f035cccf1dddc543f357b870ce04c7ece5ece87"},"剑指offer/readme.md":{"mtime":1598744372982.3525,"size":113,"hash":"5299c372a48a50143213f397df8bc69a9a02fc878800b6cd2e97ec8fd0728cd5"}},"metadata":{"b0805e8033c1a233c4d5e3effdb714954479d5286ea3851e99fa6ede9f2a4df7":{"links":[],"embeds":[],"tags":[],"headings":[]},"4776be20249dbb6fb7c6e3b1f5b618c4a1157edd4bdb131fd33acf819300e484":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Python 一切皆对象","level":1},{"line":17,"heading":"什么是抽象数据类型 ADT","level":1},{"line":33,"heading":"实现一个 Bag ADT","level":1},{"line":37,"heading":"实现 ADT 我们应该注意什么？","level":1},{"line":43,"heading":"小问题：","level":1},{"line":47,"heading":"延伸阅读：","level":1}]},"8fa6c2f85480534c042518535e120bce9538203ab1ff3054a50fb6cb10bd93f8":{"links":[],"embeds":[{"lineStart":32,"lineEnd":33,"link":"./list.png","original":"![](./list.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"线性结构","level":1},{"line":7,"heading":"数组 array","level":1},{"line":18,"heading":"列表 list","level":1},{"line":34,"heading":"用 list 实现 Array ADT","level":1},{"line":39,"heading":"小问题","level":1},{"line":45,"heading":"延伸阅读","level":1},{"line":52,"heading":"勘误","level":1}]},"ec1187d63251b8ddfb73c827e530684d1cbba4b9e52aa82ebb6d57c498343e01":{"links":[],"embeds":[],"tags":[],"headings":[]},"a18ebbd54c3e7bb27538b2d16da6d73c3d8948d0836e276daf258040f7736d5d":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"链式结构","level":1},{"line":13,"heading":"单链表","level":1},{"line":48,"heading":"双链表","level":1},{"line":84,"heading":"小问题：","level":1},{"line":91,"heading":"相关阅读","level":1},{"line":95,"heading":"勘误：","level":1},{"line":99,"heading":"Leetcode","level":1}]},"bc66102a3902cf9911a257f545e7f796bb2d3925d989c13b7a5416580816f35f":{"links":[],"embeds":[],"tags":[],"headings":[]},"e9e5f130cdfac7f9dc19554eebc11438cada50d42a89cc4466a5375722b3834e":{"links":[],"embeds":[{"lineStart":59,"lineEnd":60,"link":"./array_queue.png","original":"![](./array_queue.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"队列和栈","level":1},{"line":12,"heading":"队列 Queue","level":1},{"line":37,"heading":"用数组实现队列","level":1},{"line":64,"heading":"双端队列 Double ended Queue","level":1},{"line":84,"heading":"思考题","level":1}]},"9ad0e91fa6e7f67544db45858b6ec745dda20233dbdee9d1fbca26186b78adc7":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"栈","level":1},{"line":14,"heading":"栈 ADT","level":1},{"line":32,"heading":"Stack over flow 什么鬼？","level":1},{"line":47,"heading":"数据结构头脑风暴法","level":1},{"line":54,"heading":"思考题","level":1},{"line":60,"heading":"Leetcode 练习","level":1}]},"3cbda9073628599763bd2bdfaf367128ecd836e977f1fe877e6b71df22e0b5a1":{"links":[],"embeds":[{"lineStart":97,"lineEnd":98,"link":"./function_growth.png","original":"![函数增长趋势图](./function_growth.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"算法复杂度分析","level":1},{"line":6,"heading":"大 O 表示法","level":1},{"line":58,"heading":"如何计算时间复杂度","level":1},{"line":71,"heading":"常用时间复杂度","level":1},{"line":87,"heading":"空间复杂度","level":1},{"line":94,"heading":"常见复杂度增长趋势图","level":1},{"line":100,"heading":"时间换空间，空间换时间","level":1},{"line":109,"heading":"思考题","level":1},{"line":117,"heading":"参考资料","level":1}]},"3e705e3265dde624dccf40557922dcbb411f49620766c818cd86b606743bf058":{"links":[],"embeds":[],"tags":[],"headings":[]},"9a1bc183bd8203e65c575c71b87cbd94d2a5fd3570f6bde49d92b22d638a20d2":{"links":[],"embeds":[{"lineStart":37,"lineEnd":38,"link":"./insert_hash.png","original":"![](./insert_hash.png)","displayText":""},{"lineStart":45,"lineEnd":46,"link":"./insert_hash_chaining.png","original":"![](./insert_hash_chaining.png)","displayText":""},{"lineStart":100,"lineEnd":101,"link":"quadratic_hash.png","original":"![](quadratic_hash.png)","displayText":""},{"lineStart":102,"lineEnd":103,"link":"quadratic_result.png","original":"![](quadratic_result.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"哈希表","level":1},{"line":4,"heading":"哈希表的工作过程","level":1},{"line":40,"heading":"哈希冲突 (collision)","level":1},{"line":105,"heading":"Cpython 如何解决哈希冲突","level":1},{"line":128,"heading":"哈希函数","level":1},{"line":134,"heading":"装载因子(load factor)","level":1},{"line":140,"heading":"重哈希(Rehashing)","level":1},{"line":145,"heading":"HashTable ADT","level":1},{"line":172,"heading":"思考题","level":1},{"line":176,"heading":"延伸阅读","level":1}]},"056280404b67f97e9e1661eb66dc8416a61518b3fc6af5512cdaa41c552270cc":{"links":[],"embeds":[],"tags":[],"headings":[]},"8ebe60a33e4f4ced7264826b9efe7844d95c453c6feaeadddc8a61b77dc9a59b":{"links":[],"embeds":[],"tags":[],"headings":[]},"f430218fd737a5ed2f8955d71af91ba7ee471f982fc99d1c9b2fd57e9a4be7c9":{"links":[],"embeds":[],"tags":[],"headings":[]},"15b7a693b4f6247070e8a74e93e63b5c2856fbe844e9d0f392a6d0cb2d6c4e1c":{"links":[],"embeds":[],"tags":[],"headings":[]},"92da20798777ea4a0fec17792d009eb58cfa711febeabe0cc1306ea5e741886e":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"字典 dict","level":1},{"line":13,"heading":"实现 dict ADT","level":1},{"line":27,"heading":"Hashable","level":1},{"line":47,"heading":"思考题：","level":1},{"line":53,"heading":"延伸阅读","level":1}]},"07fbcaadf01bb57aff87033bbfe7d0056f252bb30b62faee2f776685b2a4ed2b":{"links":[],"embeds":[{"lineStart":20,"lineEnd":21,"link":"./set.png","original":"![](./set.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"集合 set","level":1},{"line":6,"heading":"集合操作","level":1},{"line":22,"heading":"python frozenset","level":1},{"line":27,"heading":"实现一个 set ADT","level":1},{"line":41,"heading":"思考题","level":1},{"line":50,"heading":"延伸阅读","level":1}]},"747c960cb944cf8315769a167e1170217c7b10fd956019ce2bb5e9f0882628ce":{"links":[],"embeds":[],"tags":[],"headings":[]},"c9a8260d73a69ff36ca5440a6476da03b6adba139c36f2523a5641ec1fca9734":{"links":[],"embeds":[],"tags":[],"headings":[]},"7fae9bd712477b7ba1e3d9dac463952b5063aa39518496996bca5ea391f1ed69":{"links":[],"embeds":[],"tags":[],"headings":[]},"8e7d7972ba1aa7c3af05102fa8cf6862b9e363939b24c2665faaa337d7fdbbca":{"links":[],"embeds":[],"tags":[],"headings":[]},"d137ebaf680c73e71e950e677e7ac85c6384705e7178174e1a2d6e128a2fb233":{"links":[],"embeds":[],"tags":[],"headings":[]},"2110672d10ed4425182ce9289f8386ee3c28f4388f6c6557001c7bfeded458f4":{"links":[],"embeds":[],"tags":[],"headings":[]},"b41def978728c5b738859e03b95c1ad9571e57bf75463847aea95a6bc7cedec2":{"links":[],"embeds":[{"lineStart":16,"lineEnd":17,"link":"./fact.png","original":"![](./fact.png)","displayText":""},{"lineStart":73,"lineEnd":74,"link":"./print_rec.png","original":"![](./print_rec.png)","displayText":""},{"lineStart":145,"lineEnd":146,"link":"./hanoi_tower.png","original":"![五个盘子的汉诺塔问题](./hanoi_tower.png)","displayText":""},{"lineStart":151,"lineEnd":152,"link":"./hanoi_four_disks.png","original":"![](./hanoi_four_disks.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"递归","level":1},{"line":12,"heading":"什么是递归？","level":1},{"line":34,"heading":"调用栈","level":1},{"line":75,"heading":"用栈模拟递归","level":1},{"line":109,"heading":"尾递归","level":1},{"line":131,"heading":"汉诺塔问题","level":1},{"line":189,"heading":"延伸阅读","level":1},{"line":198,"heading":"思考题","level":1}]},"790301d4d2ebc7ecf11c6b8bcc3a04c44d13e9b87a97604f10c76ecfe0be3b8c":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"查找","level":1},{"line":5,"heading":"线性查找","level":1},{"line":56,"heading":"二分查找","level":1},{"line":99,"heading":"思考题","level":1},{"line":104,"heading":"延伸阅读","level":1},{"line":113,"heading":"Leetcode","level":1}]},"da3b4890a9625155bffbd9243d80f73b7fc452375e4006a1d840f81d6226fc88":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"基本排序算法","level":1},{"line":4,"heading":"冒泡排序","level":1},{"line":53,"heading":"选择排序","level":1},{"line":95,"heading":"插入排序","level":1},{"line":138,"heading":"思考题","level":1},{"line":143,"heading":"延伸阅读","level":1}]},"cc8cd0e31b6e96b52950d0bdf6e2226fb84582f81b903c3c268a41dc8207de4f":{"links":[{"lineStart":4,"lineEnd":5,"link":"./merge_sort.md","original":"[分治法与归并排序](./merge_sort.md)","displayText":"分治法与归并排序"},{"lineStart":5,"lineEnd":6,"link":"./quick_sort.md","original":"[快速排序](./quick_sort.md)","displayText":"快速排序"}],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"高级排序算法","level":1}]},"9ad57f3162f19980f2cb92fe12d1367eb3759f057f8725f78f6ae6d57ec0adc7":{"links":[],"embeds":[{"lineStart":22,"lineEnd":23,"link":"./merge_sort_split.png","original":"![](./merge_sort_split.png)","displayText":""},{"lineStart":26,"lineEnd":27,"link":"./merge_sort_merge.png","original":"![](./merge_sort_merge.png)","displayText":""},{"lineStart":47,"lineEnd":48,"link":"./merge_sorted_array.png","original":"![](./merge_sorted_array.png)","displayText":""},{"lineStart":49,"lineEnd":50,"link":"./merge_sorted_array_2.png","original":"![](./merge_sorted_array_2.png)","displayText":""},{"lineStart":90,"lineEnd":91,"link":"./merge_sort_recursion_tree.png","original":"![](./merge_sort_recursion_tree.png)","displayText":""},{"lineStart":99,"lineEnd":100,"link":"./tn.png","original":"![](./tn.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"分治法 (Divide and Conquer)","level":1},{"line":13,"heading":"归并排序","level":1},{"line":83,"heading":"时间复杂度","level":1},{"line":102,"heading":"思考题","level":1},{"line":107,"heading":"延伸阅读","level":1}]},"3ea178ca529d9fc67e95e10d2301505918e32b4bf1944b7c76d09a2ac3328bfe":{"links":[],"embeds":[],"tags":[],"headings":[]},"60365f5c9995844a84b3312ec278679b473b3e7433d4cbcb92a2de3bf804cc13":{"links":[],"embeds":[],"tags":[],"headings":[]},"a8f197eb73ef49e894f02466165a403514483992c91ef070df6abae520330c3a":{"links":[],"embeds":[],"tags":[],"headings":[]},"b1d8d0ee9ef0674c67d88b06c575cb4077f62adae529f55c79e8909fa72838ad":{"links":[],"embeds":[],"tags":[],"headings":[]},"cca380ad0251ce6af81c712bab87c2240364987997f7bcc6cab9b478e7d2d8a5":{"links":[],"embeds":[],"tags":[],"headings":[]},"6782597338084983c97bed83b69b819b7bbb8d67d1b155e092f6054ea582c04b":{"links":[],"embeds":[],"tags":[],"headings":[]},"34a0b8162b517141689fd0b8fd42cec7a2493fe6a221377fffdb836b0da4e156":{"links":[],"embeds":[],"tags":[],"headings":[]},"26c8b78bcd00fbbd77c0e8b26e728bf013c29af23edf860ff2f583086d53808e":{"links":[],"embeds":[{"lineStart":14,"lineEnd":15,"link":"./quick_sort.png","original":"![](./quick_sort.png)","displayText":""},{"lineStart":52,"lineEnd":53,"link":"./partition.png","original":"![](./partition.png)","displayText":""},{"lineStart":96,"lineEnd":97,"link":"quicksort_worst.png","original":"![](quicksort_worst.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"快速排序","level":1},{"line":89,"heading":"时间复杂度","level":1},{"line":99,"heading":"思考题","level":1},{"line":108,"heading":"延伸阅读","level":1},{"line":112,"heading":"总结","level":1},{"line":127,"heading":"Leetcode","level":1}]},"f40c5edadb10672db255a562000ff2cf2c16f247915f3dcfb98c7a80c6065f0d":{"links":[],"embeds":[],"tags":[],"headings":[]},"578a346a014f817a1861662a9aef33fc0d1bafdc8189d68a4d91d9748c7ec930":{"links":[],"embeds":[],"tags":[],"headings":[]},"889b6b2d53120be1cb01d34edefee1d106acc1cc7ff8f2194c9ae10b6351f29e":{"links":[],"embeds":[],"tags":[],"headings":[]},"7e9c4f7f6f6cce01e901a67de2ae4f8941724af50de8529bcff2b76fcb712f23":{"links":[],"embeds":[],"tags":[],"headings":[]},"d278860636a7333f30899ee443ad6076d46ac8f3e4d317332d940f076ea78465":{"links":[],"embeds":[],"tags":[],"headings":[]},"59fe9e6a46fc81c261018fd39a3f95eefd9dba9defb97b212961c1825c329ee0":{"links":[],"embeds":[],"tags":[],"headings":[]},"2bbd5f44726fef81dd3bf0928df55e0c53575c9f724a0606c411357ff6f44b42":{"links":[],"embeds":[],"tags":[],"headings":[]},"3a8a5ac765398fb027c7063d2af51d665cd290590d99efd817109a1e3df28467":{"links":[],"embeds":[],"tags":[],"headings":[]},"0d3a951586bba7d1c628147899fe9156ac0ec430c2c83b77f2d55c875e6141a0":{"links":[],"embeds":[],"tags":[],"headings":[]},"98e423739c38a44737690248ac3464e7b2ead8dd323de308ce95f33f179dba5e":{"links":[],"embeds":[{"lineStart":7,"lineEnd":8,"link":"./family_tree.png","original":"![](./family_tree.png)","displayText":""},{"lineStart":11,"lineEnd":12,"link":"./tree.png","original":"![](./tree.png)","displayText":""},{"lineStart":27,"lineEnd":29,"link":"./binary_tree.png","original":"![](./binary_tree.png)","displayText":""},{"lineStart":27,"lineEnd":29,"link":"./binary_tree_level.png","original":"![](./binary_tree_level.png)","displayText":""},{"lineStart":46,"lineEnd":47,"link":"./full_binary_tree.png","original":"![](./full_binary_tree.png)","displayText":""},{"lineStart":51,"lineEnd":52,"link":"./perfect_binary_tree.png","original":"![](./perfect_binary_tree.png)","displayText":""},{"lineStart":57,"lineEnd":58,"link":"./complete_binary_tree.png","original":"![](./complete_binary_tree.png)","displayText":""},{"lineStart":63,"lineEnd":64,"link":"preorder.png","original":"![](preorder.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"树和二叉树","level":1},{"line":4,"heading":"树","level":1},{"line":22,"heading":"二叉树","level":1},{"line":40,"heading":"一些特殊的二叉树","level":1},{"line":43,"heading":"满二叉树(full binary tree)","level":3},{"line":48,"heading":"完美二叉树(perfect binary tree)","level":3},{"line":53,"heading":"完全二叉树(complete binary tree)","level":3},{"line":59,"heading":"二叉树的表示","level":1},{"line":129,"heading":"二叉树的遍历","level":1},{"line":197,"heading":"二叉树层序遍历","level":1},{"line":249,"heading":"反转二叉树","level":1},{"line":261,"heading":"练习题","level":1},{"line":269,"heading":"延伸阅读","level":1},{"line":274,"heading":"Leetcode 练习","level":1}]},"0114e330ebbabc1a163d5613e6c438eb57a0823f348c2aaa1301e51389aeadd1":{"links":[],"embeds":[],"tags":[],"headings":[]},"b0cf115751cbad57e2d4bda50b042c5238ef305ecd0d5ea9112cedaa96c460b0":{"links":[],"embeds":[],"tags":[],"headings":[]},"f482a1202d74aa7f05cffe8126998a7b739b72fc17b127e4d77232ed3463585e":{"links":[],"embeds":[{"lineStart":13,"lineEnd":14,"link":"./heap.png","original":"![](./heap.png)","displayText":""},{"lineStart":22,"lineEnd":24,"link":"./siftup.png","original":"![](./siftup.png)","displayText":""},{"lineStart":22,"lineEnd":24,"link":"./siftdown.png","original":"![](./siftdown.png)","displayText":""},{"lineStart":28,"lineEnd":29,"link":"heap_array.png","original":"![](heap_array.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"堆(heap)","level":1},{"line":6,"heading":"什么是堆？","level":1},{"line":15,"heading":"堆的操作","level":1},{"line":25,"heading":"堆的表示","level":1},{"line":39,"heading":"实现一个最大堆","level":1},{"line":101,"heading":"实现堆排序","level":1},{"line":123,"heading":"Python 里的 heapq 模块","level":1},{"line":128,"heading":"Top K 问题","level":1},{"line":192,"heading":"练习题","level":1},{"line":201,"heading":"延伸阅读","level":1},{"line":206,"heading":"Leetcode","level":1}]},"7658b3df78fe6b470fc0c88d6c8597fd4365ebe0eabb80b17ea77a129aad41f2":{"links":[],"embeds":[],"tags":[],"headings":[]},"14b3f5b0fb290dcfb961ca0ab565585cb96d7cee702df6737ee3aeac044b4130":{"links":[],"embeds":[],"tags":[],"headings":[]},"864c6f8db8dc832ff3d66bbb1c21d91ed400ca60d82fa360af31d05fc78ac578":{"links":[],"embeds":[],"tags":[],"headings":[]},"f36dad7ddd9e1f299cba9fcc0a59b0261a72b0675eb0df792956f811d99b8417":{"links":[],"embeds":[],"tags":[],"headings":[]},"0c59b7eb9730149cd2616e2f023f1a947291325ad6fd6baf6977f92f1d67cd6e":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"优先级队列","level":1},{"line":5,"heading":"实现优先级队列","level":1},{"line":51,"heading":"练习题","level":1}]},"a82202008b2d5cb07e18d6fc2d6a606ace8160c97110d84e9e2f99e11b0eeead":{"links":[],"embeds":[{"lineStart":13,"lineEnd":14,"link":"./bst.png","original":"![](./bst.png)","displayText":""},{"lineStart":76,"lineEnd":77,"link":"./bst_search.png","original":"![](./bst_search.png)","displayText":""},{"lineStart":122,"lineEnd":123,"link":"./bst_insert.png","original":"![](./bst_insert.png)","displayText":""},{"lineStart":164,"lineEnd":165,"link":"./bst_remove_leaf.png","original":"![](./bst_remove_leaf.png)","displayText":""},{"lineStart":170,"lineEnd":171,"link":"./bst_remove_node_with_one_child.png","original":"![](./bst_remove_node_with_one_child.png)","displayText":""},{"lineStart":175,"lineEnd":176,"link":"./remove_interior_replace.png","original":"![](./remove_interior_replace.png)","displayText":""},{"lineStart":181,"lineEnd":182,"link":"./predecessor_successor.png","original":"![](./predecessor_successor.png)","displayText":""},{"lineStart":193,"lineEnd":194,"link":"./find_successor.png","original":"![](./find_successor.png)","displayText":""},{"lineStart":236,"lineEnd":237,"link":"./bst_worstcase.png","original":"![](./bst_worstcase.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"二叉查找树(BST)","level":1},{"line":6,"heading":"BST 定义","level":1},{"line":25,"heading":"构造一个 BST","level":1},{"line":70,"heading":"BST 操作","level":1},{"line":72,"heading":"查找","level":2},{"line":100,"heading":"获取最大和最小 key 的节点","level":2},{"line":118,"heading":"插入","level":2},{"line":151,"heading":"删除节点","level":2},{"line":161,"heading":"删除叶节点","level":4},{"line":166,"heading":"删除只有一个孩子的节点","level":4},{"line":172,"heading":"删除有两个孩子的内部节点","level":4},{"line":231,"heading":"时间复杂度分析","level":1},{"line":239,"heading":"练习题：","level":1},{"line":243,"heading":"延伸阅读","level":1},{"line":249,"heading":"Leetcode","level":1}]},"1b27e1d6b2c2be0fefce3eb1480b8ae8b2bf3855e2759c87e38bd8fe1b97861c":{"links":[],"embeds":[],"tags":[],"headings":[]},"297e6fa29cbc06f6081e925a1c2b4b13e8e29aadcaca74c7d7fb1497f4e2a6de":{"links":[],"embeds":[],"tags":[],"headings":[]},"815b50b5e275c9e9025abd53690a78f9fe017e41e472ff913024414383b46602":{"links":[],"embeds":[],"tags":[],"headings":[]},"2a7263a925ef2177886be8c58465ae5b9f734b854acf5fdef7f6c837984cf328":{"links":[],"embeds":[],"tags":[],"headings":[]},"20e77e5882a047816e061caa2bc90225f01340037dacfd90f82a20ca293c53e4":{"links":[],"embeds":[],"tags":[],"headings":[]},"f710a5cbefe07ac98710253e31814f2732814ef0a2a6933e9412ad8bb9bb10ae":{"links":[],"embeds":[],"tags":[],"headings":[]},"6fd92cf7c4104c7b2bf2037f70bb304f17430b81c0651a47a4e49591254382ff":{"links":[],"embeds":[],"tags":[],"headings":[]},"04ef30a768dc455d52107407be8fae1863aa54dfae58ce521693b37628d441eb":{"links":[],"embeds":[],"tags":[],"headings":[]},"6cd2ac1c9781aacb9bb07dda698be01814de32403559a3c21c5d2c1a20ce1eaa":{"links":[],"embeds":[],"tags":[],"headings":[]},"a4fb0a05daa8b5d7b30813a0f1db0c0f54dd6494246d5a42a55a49a64f30d0aa":{"links":[],"embeds":[],"tags":[],"headings":[]},"c7335e3a7a41962f991d4b7c170f15081a14b76dc87c1822666182ab509c6500":{"links":[],"embeds":[{"lineStart":9,"lineEnd":10,"link":"./graph_road.png","original":"![](./graph_road.png)","displayText":""},{"lineStart":17,"lineEnd":18,"link":"./graph_rep.png","original":"![](./graph_rep.png)","displayText":""},{"lineStart":111,"lineEnd":112,"link":"./bfs.png","original":"![](./bfs.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"图","level":1},{"line":5,"heading":"什么是图？","level":1},{"line":14,"heading":"图的表示","level":1},{"line":24,"heading":"图的遍历","level":1},{"line":30,"heading":"BFS","level":3},{"line":113,"heading":"DFS","level":3},{"line":135,"heading":"思考题","level":1},{"line":138,"heading":"延伸阅读","level":1}]},"0d13b4d20b17863124fcb68bee341203b7812474b1c7c0277c74d746ab5fb86f":{"links":[],"embeds":[],"tags":[],"headings":[]},"ad8dc10914410c09308700e46ed9b0ba91ce07dae22e7104b71a6d38b181b9f9":{"links":[],"embeds":[],"tags":[],"headings":[]},"c6bda65ced80cbb7dbbd618706f67689896e86292c47b6401369095b11e52a07":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"Python 常用内置算法和数据结构","level":1}]},"1a913b5dd98683b13f4863e577e697f9bcc4c5c7d0cd81a69aad49ff40fd7e43":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"注意事项","level":1},{"line":10,"heading":"白板编程","level":1},{"line":22,"heading":"手写代码注意事项","level":1},{"line":32,"heading":"结语","level":1},{"line":36,"heading":"延伸阅读","level":1}]},"dbcc210d7f4962499db6d4cfa18658e26d05ee700c962a811cac911f095e22fd":{"links":[],"embeds":[],"tags":[],"headings":[]},"abe53e14a6b266777965dd1c9f035cccf1dddc543f357b870ce04c7ece5ece87":{"links":[],"embeds":[{"lineStart":337,"lineEnd":338,"link":"./163_course.png","original":"![扫码加入课程](./163_course.png)","displayText":""}],"tags":[],"headings":[{"line":0,"heading":"Python 算法与数据结构视频教程","level":1},{"line":2,"heading":"课程简介","level":2},{"line":7,"heading":"链接","level":2},{"line":26,"heading":"痛点","level":2},{"line":32,"heading":"作者简介","level":2},{"line":42,"heading":"课程内容","level":2},{"line":52,"heading":"目录结构","level":2},{"line":82,"heading":"编程语言","level":2},{"line":92,"heading":"受众","level":2},{"line":99,"heading":"预备知识","level":1},{"line":105,"heading":"参考教材和链接","level":2},{"line":115,"heading":"算法可视化","level":2},{"line":122,"heading":"讲课形式","level":2},{"line":137,"heading":"课程特点","level":2},{"line":150,"heading":"资料","level":2},{"line":157,"heading":"如何获取每章代码","level":2},{"line":165,"heading":"如何学习","level":2},{"line":179,"heading":"课程目标","level":2},{"line":184,"heading":"开发和测试工具","level":2},{"line":227,"heading":"测试用例设计","level":2},{"line":276,"heading":"勘误","level":2},{"line":290,"heading":"如何更新代码(写给不熟悉 git 的同学)","level":2},{"line":303,"heading":"如何提问？","level":2},{"line":312,"heading":"本电子书制作和写作方式","level":2}]},"5299c372a48a50143213f397df8bc69a9a02fc878800b6cd2e97ec8fd0728cd5":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"《剑指offer》题解","level":1}]},"85d4c694d38b1bec1a834291ad0347ee7da9b2b95d7144d0f100de917aa6fe2a":{"links":[],"embeds":[],"tags":[],"headings":[{"line":0,"heading":"什么是算法和数据结构？","level":1},{"line":16,"heading":"笨方法学算法","level":1},{"line":24,"heading":"小问题","level":1}]}},"algorithmVersion":12}